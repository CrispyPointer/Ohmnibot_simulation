<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from tb_sim.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="tb_sim">
  <!-- Define robot physical and appearance model-->
  <!-- Using dummy/roundly estimated number for inertia, friction model-->
  <!-- IMPROVE
  * More simplify robot mesh files to run faster
  * Add material and calculate precise inertia tensor
  * Modify the friction model to get nature physical interaction-->
  <!-- Define robot links and joints -->
  <link name="footprint"/>
  <joint name="footprint_joint" type="fixed">
    <origin rpy="0 0.0 0" xyz="0.0 0.0 -0.076"/>
    <parent link="base_link"/>
    <child link="footprint"/>
    <axis xyz="0 0 0"/>
  </joint>
  <link name="base_link">
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="-0.15 0.0 0.01"/>
      <mass value="5.5"/>
      <inertia ixx="0.03158" ixy="0" ixz="0" iyy="0.04418" iyz="0" izz="0.069898"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/base_link.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/base_link.STL"/>
      </geometry>
    </collision>
    <gazebo reference="base_link">
      <material>Gazebo/Blue</material>
    </gazebo>
  </link>
  <link name="wheel_left_link">
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.00039792" ixy="0" ixz="0" iyy="0.00078467" iyz="0" izz="0.00039792"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://tb_description/meshes/wheel_link.STL"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://tb_description/meshes/wheel_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.165 0"/>
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="wheel_left_link">
    <material>Gazebo/FlatBlack</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <link name="wheel_right_link">
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.00039792" ixy="0" ixz="0" iyy="0.00078467" iyz="0" izz="0.00039792"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://tb_description/meshes/wheel_link.STL"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://tb_description/meshes/wheel_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.165 0"/>
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <gazebo reference="wheel_right_link">
    <material>Gazebo/FlatBlack</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <link name="caster_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.016859 0 -0.039"/>
      <mass value="0.12725"/>
      <inertia ixx="0.00013389" ixy="-3.291E-08" ixz="-5.4328E-05" iyy="0.00016302" iyz="-4.433E-08" izz="9.9804E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/caster_link.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/caster_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="caster_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.32849 0 0.036"/>
    <parent link="base_link"/>
    <child link="caster_link"/>
    <axis xyz="0 0 1"/>
    <safety_controller k_velocity="0"/>
  </joint>
  <link name="caster_wheel_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 7.5E-05 0"/>
      <mass value="0.055271"/>
      <inertia ixx="2.6207E-05" ixy="0" ixz="0" iyy="4.8328E-05" iyz="0" izz="2.6207E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/caster_wheel_link.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/caster_wheel_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.039059 0 -0.075"/>
    <parent link="caster_link"/>
    <child link="caster_wheel_link"/>
    <axis xyz="0 1 0"/>
    <safety_controller k_velocity="0"/>
  </joint>
  <link name="tube_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.02 0 0.6"/>
      <mass value="2"/>
      <inertia ixx="0.2083333333" ixy="0.0" ixz="0.0" iyy="0.2083333333" iyz="0.0" izz="0.000905"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/tube_link.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/tube_link.STL"/>
      </geometry>
    </collision>
    <gazebo reference="tube_link">
      <material>Gazebo/Orange</material>
    </gazebo>
    tb_gazebo
  
  </link>
  <joint name="tube_joint" type="fixed">
    <origin rpy="0 -0.18326 0" xyz="-0.026814 0 0.083753"/>
    <parent link="base_link"/>
    <child link="tube_link"/>
    <axis xyz="0 0 0"/>
    <safety_controller k_velocity="0"/>
  </joint>
  <link name="display_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.02866 0.0042627 0.019125"/>
      <mass value="0.3"/>
      <inertia ixx="0.0015625" ixy="0" ixz="0" iyy="0.000625" iyz="0" izz="0.0010625"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/display_link.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://tb_description/meshes/display_link.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="neck_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.14191 0 1.1557"/>
    <parent link="tube_link"/>
    <child link="display_link"/>
    <axis xyz="0.0 1 0.0"/>
    <safety_controller k_velocity="0"/>
  </joint>
  <!-- Define sensor from xacro -->
  <!-- urdf format -->
  <!-- dummy camera link attached to the camera rigid body -->
  <link name="tele_camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="tele_camera_mount_joint" type="fixed">
    <origin rpy="0.0 0.0 0" xyz="0.05 0 0.11"/>
    <parent link="display_link"/>
    <child link="tele_camera_link"/>
  </joint>
  <link name="tele_optical_frame"/>
  <joint name="tele_optical_joint" type="fixed">
    <origin rpy="1.570795 3.14159 1.570795" xyz="0 0 0"/>
    <parent link="tele_camera_link"/>
    <child link="tele_optical_frame"/>
  </joint>
  <gazebo reference="tele_camera_link">
    <sensor name="tele_camera" type="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>2.09439</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>20</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>tele_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>tele_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- urdf format -->
  <!-- dummy camera link attached to the camera rigid body -->
  <link name="nav_camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="nav_camera_mount_joint" type="fixed">
    <origin rpy="0.0 1.39626222222 0" xyz="0.05 0 1.1"/>
    <parent link="tube_link"/>
    <child link="nav_camera_link"/>
  </joint>
  <link name="nav_optical_frame"/>
  <joint name="nav_optical_joint" type="fixed">
    <origin rpy="1.570795 3.14159 1.570795" xyz="0 0 0"/>
    <parent link="nav_camera_link"/>
    <child link="nav_optical_frame"/>
  </joint>
  <gazebo reference="nav_camera_link">
    <sensor name="nav_camera" type="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>2.09439</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>5</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>nav_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>nav_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- urdf format -->
  <link name="astra_link">
    <visual>
      <geometry>
        <!-- <mesh filename="package://tb_description/meshes/sensors/kinect.dae"/> -->
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <!-- <box size="0.07 0.3 0.09"/> -->
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="astra_mount_joint" type="fixed">
    <origin rpy="0.0 0.872663888889 0" xyz="0.05 0 0.9"/>
    <parent link="tube_link"/>
    <!--<parent link="base_link"/>-->
    <child link="astra_link"/>
  </joint>
  <link name="astra_optical_frame"/>
  <joint name="astra_optical_joint" type="fixed">
    <origin rpy="1.570795 3.14159 1.570795" xyz="0 0 0"/>
    <parent link="astra_link"/>
    <child link="astra_optical_frame"/>
  </joint>
  <gazebo reference="astra_link">
    <sensor name="depth_camera" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <!--          <width>160</width>
            <height>120</height>-->
          <width>320</width>
          <height>240</height>
          <!--     <width>640</width>
            <height>480</height>-->
          <!--     <width>480</width>
            <height>270</height>-->
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>15</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="depth_camera_plugin">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <!-- Keep this zero, update_rate in the parent <sensor> tag will control the frame rate. -->
        <updateRate>0</updateRate>
        <cameraName>astra</cameraName>
        <imageTopicName>/astra/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>/astra/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/astra/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/astra/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/astra/depth/points</pointCloudTopicName>
        <frameName>astra_optical_frame</frameName>
        <pointCloudCutoff>0.03</pointCloudCutoff>
        <pointCloudCutoffMax>5.0</pointCloudCutoffMax>
        <!-- for 320x240 -->
        <focalLength>277.127346</focalLength>
        <!-- for 640x480 -->
        <!-- <focalLength>554.25469</focalLength> -->
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <!-- <Cx>320</Cx>
          <Cy>240</Cy> -->
        <!-- <Cx>160</Cx>
          <Cy>120</Cy> -->
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- urdf format -->
  <link name="imu_base_frame"/>
  <joint name="imu_base_mount_joint" type="fixed">
    <origin rpy="0.0 0.0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_base_frame"/>
  </joint>
  <!--    change reference to parent_link, loop?-->
  <gazebo reference="base_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <imu>
        <noise>
          <type>none</type>
        </noise>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>tb_sim/imu</topicName>
        <bodyName>imu_base_frame</bodyName>
        <updateRateHZ>0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>base_link</frameName>
      </plugin>
      <!-- <pose>0 0 0 0 0 0</pose> -->
    </sensor>
  </gazebo>
  <!-- urdf format -->
  <link name="laser_range_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="laser_range_mount_joint" type="fixed">
    <origin rpy="0.0 0.0 0" xyz="-0.3 0 0.4"/>
    <parent link="base_link"/>
    <child link="laser_range_link"/>
  </joint>
  <gazebo reference="laser_range_link">
    <sensor name="laser_range_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        ase
          
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>10.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/laser_range/laser_scan</topicName>
        <frameName>laser_range_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <publishWheelTF>true</publishWheelTF>
      <updateRate>100</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.33</wheelSeparation>
      <wheelDiameter>0.152</wheelDiameter>
      <wheelTorque>20</wheelTorque>
      <commandTopic>tb_sim/cmd_vel</commandTopic>
      <odometryTopic>tb_sim/odom</odometryTopic>
      <odometryFrame>tb_sim/odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <odometrySource>encoder</odometrySource>
      <!--        <odometrySource>world</odometrySource>-->
    </plugin>
  </gazebo>
  <!--<transmission name="tran1">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${joint_name}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="servo">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${robotname}</robotNamespace>
      </plugin>
    </gazebo>-->
  <gazebo>
    <plugin filename="libtb_gazebo_ros_servo_pos_drive.so" name="gazebo_ros_joint_pos_control">
      <updateRate>100</updateRate>
      <robotNamespace>tb_sim</robotNamespace>
      <jointName>neck_joint</jointName>
      <controllerKp>7</controllerKp>
      <controllerKi>0.1</controllerKi>
      <controllerKd>0.2</controllerKd>
      <torque>50</torque>
    </plugin>
  </gazebo>
</robot>

